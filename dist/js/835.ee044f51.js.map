{"version":3,"file":"js/835.ee044f51.js","mappings":"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","sources":["webpack://pros-project/./src/composables/dataRestore.js","webpack://pros-project/./node_modules/vuetify/lib/components/VAlert/VAlertTitle.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VAlert/VAlert.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCardSubtitle.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCardItem.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCard.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCardActions.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCardText.mjs","webpack://pros-project/./node_modules/vuetify/lib/components/VCard/VCardTitle.mjs"],"sourcesContent":["import { useDataStore } from \"@/store/index\";\r\nimport { ref } from \"vue\";\r\n\r\nexport function useDataRestore() {\r\n  const store = useDataStore();\r\n  const restoredRows = ref([]);\r\n  const knnResults = ref([]);\r\n  const performanceMetrics = ref(null);\r\n  const algorithmAnalysis = ref(null);\r\n\r\n  const knnConfig = ref({\r\n    k: 3,\r\n    distanceMetric: 'Euclidean',\r\n    normalization: 'Min-Max',\r\n    aggregation: 'Mode'  // Changed default aggregation to 'Mode' for classification\r\n  });\r\n\r\n  // Improved distance metrics with NaN handling\r\n  const distanceMetrics = {\r\n    Euclidean: (x, y, features) => {\r\n      let sum = 0;\r\n      let validFeatures = 0;\r\n      for (const f of features) {\r\n        if (!isNaN(x[f]) && !isNaN(y[f])) {\r\n          sum += Math.pow(x[f] - y[f], 2);\r\n          validFeatures++;\r\n        }\r\n      }\r\n      return validFeatures > 0 ? Math.sqrt(sum / validFeatures) : Infinity;\r\n    },\r\n    Manhattan: (x, y, features) => {\r\n      let sum = 0;\r\n      let validFeatures = 0;\r\n      for (const f of features) {\r\n        if (!isNaN(x[f]) && !isNaN(y[f])) {\r\n          sum += Math.abs(x[f] - y[f]);\r\n          validFeatures++;\r\n        }\r\n      }\r\n      return validFeatures > 0 ? sum / validFeatures : Infinity;\r\n    },\r\n    Cosine: (x, y, features) => {\r\n      let dot = 0, normX = 0, normY = 0;\r\n      let validFeatures = 0;\r\n      for (const f of features) {\r\n        if (!isNaN(x[f]) && !isNaN(y[f])) {\r\n          dot += x[f] * y[f];\r\n          normX += Math.pow(x[f], 2);\r\n          normY += Math.pow(y[f], 2);\r\n          validFeatures++;\r\n        }\r\n      }\r\n      if (validFeatures === 0) return Infinity;\r\n      normX = Math.sqrt(normX);\r\n      normY = Math.sqrt(normY);\r\n      return 1 - (dot / (normX * normY + 1e-10));\r\n    }\r\n  };\r\n\r\n  // Update inspectData()\r\n  function inspectData() {\r\n    const data = prepareData();\r\n    const features = Object.keys(data[0]).filter(\r\n      k => !['id', 'decision', 'status', 'deletedAt'].includes(k)\r\n    );\r\n\r\n    const issues = features.map(f => {\r\n      const invalidCount = data.filter(row => isNaN(row[f])).length;\r\n      return invalidCount > 0 ? `${f} has ${invalidCount} invalid values` : null;\r\n    }).filter(Boolean);\r\n\r\n    return {\r\n      classCounts: {\r\n        class2: data.filter(row => row.decision === 2).length,\r\n        class4: data.filter(row => row.decision === 4).length\r\n      },\r\n      issues\r\n    };\r\n  }\r\n\r\n  // Add this function to clean and prepare your data\r\n  function prepareData() {\r\n    const validFeatures = [\r\n      'radius', 'texture', 'perimeter', 'area',\r\n      'smoothness', 'compactness', 'concavity',\r\n      'concavePoints', 'symmetry', 'fractalDimension'\r\n    ];\r\n\r\n    return store.getActiveRows\r\n      .map(item => {\r\n        // Clean and convert each feature\r\n        const cleaned = {\r\n          id: item.id,\r\n          decision: parseInt(String(item.decision).replace(/\\r/g, '').trim()),\r\n          status: item.status\r\n        };\r\n\r\n        validFeatures.forEach(f => {\r\n          // Convert to number and handle NaN cases\r\n          const numValue = parseFloat(item[f]);\r\n          cleaned[f] = isNaN(numValue) ? 0 : numValue;\r\n        });\r\n\r\n        return cleaned;\r\n      })\r\n      .filter(item => item.decision === 2 || item.decision === 4);\r\n  }\r\n\r\n  function normalizeData(trainData, testData, method, features) {\r\n    const stats = {};\r\n\r\n    // Calculate stats only from training data\r\n    features.forEach(f => {\r\n      const values = trainData\r\n        .map(row => parseFloat(row[f]))\r\n        .filter(v => !isNaN(v) && v !== null && v !== undefined);\r\n\r\n      if (values.length === 0) {\r\n        console.warn(`Feature ${f} has no valid values`);\r\n        return;\r\n      }\r\n\r\n      if (method === 'Min-Max') {\r\n        stats[f] = {\r\n          min: Math.min(...values),\r\n          max: Math.max(...values)\r\n        };\r\n      } else if (method === 'Z-Score') {\r\n        const mean = values.reduce((a, b) => a + b, 0) / values.length;\r\n        const std = Math.sqrt(values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length);\r\n        stats[f] = { mean, std };\r\n      }\r\n    });\r\n\r\n    const normalize = (row, stats) => {\r\n      const normalized = { ...row };\r\n      features.forEach(f => {\r\n        if (!stats[f]) {\r\n          normalized[f] = 0; // Default value for invalid features\r\n          return;\r\n        }\r\n\r\n        const value = parseFloat(row[f]);\r\n        if (isNaN(value)) {\r\n          normalized[f] = 0;\r\n          return;\r\n        }\r\n\r\n        if (method === 'Min-Max') {\r\n          const range = stats[f].max - stats[f].min;\r\n          normalized[f] = range > 0 ? (value - stats[f].min) / range : 0;\r\n        } else if (method === 'Z-Score') {\r\n          normalized[f] = stats[f].std > 0 ? (value - stats[f].mean) / stats[f].std : 0;\r\n        }\r\n      });\r\n      return normalized;\r\n    };\r\n\r\n    return {\r\n      train: trainData.map(row => normalize(row, stats)),\r\n      test: testData.map(row => normalize(row, stats))\r\n    };\r\n  }\r\n\r\n\r\n  function stratifiedShuffle(data) {\r\n    const class2 = data.filter(row => row.decision === 2);\r\n    const class4 = data.filter(row => row.decision === 4);\r\n\r\n    const shuffle = arr => [...arr].sort(() => Math.random() - 0.5);\r\n\r\n    const shuffled = [];\r\n    const maxLength = Math.max(class2.length, class4.length);\r\n\r\n    for (let i = 0; i < maxLength; i++) {\r\n      if (i < class2.length) shuffled.push(class2[i]);\r\n      if (i < class4.length) shuffled.push(class4[i]);\r\n    }\r\n\r\n    return shuffle(shuffled);\r\n  }\r\n\r\n  function findKNN(target, data, features) {\r\n    const cleanTargetDecision = parseInt(String(target.decision).replace(/\\r/g, '').trim());\r\n\r\n    const normalized = normalizeData(data, [target], knnConfig.value.normalization, features);\r\n    const normTrain = normalized.train;\r\n    const normTarget = normalized.test[0];\r\n\r\n    const distances = data.map((row, index) => ({\r\n      row,\r\n      distance: distanceMetrics[knnConfig.value.distanceMetric](\r\n        normTarget,\r\n        normTrain[index],\r\n        features\r\n      ),\r\n      decision: parseInt(String(row.decision).replace(/\\r/g, '').trim())\r\n    }));\r\n\r\n    return distances\r\n      .sort((a, b) => a.distance - b.distance)\r\n      .slice(0, knnConfig.value.k);\r\n  }\r\n\r\n  function crossValidate() {\r\n    const inspection = inspectData();\r\n    if (inspection.issues.length > 0) {\r\n      console.error('Data issues:', inspection.issues);\r\n      return;\r\n    }\r\n\r\n    const data = store.getActiveRows\r\n      .map(row => ({\r\n        ...row,\r\n        decision: parseInt(String(row.decision).replace(/\\r/g, '').trim())\r\n      }))\r\n      .filter(row => row.decision === 2 || row.decision === 4);\r\n\r\n    const features = Object.keys(data[0]).filter(\r\n      k => !['id', 'decision', 'status', 'deletedAt'].includes(k)\r\n    );\r\n\r\n    // Stratified shuffle\r\n    const class2 = data.filter(row => row.decision === 2);\r\n    const class4 = data.filter(row => row.decision === 4);\r\n    const shuffled = [...class2, ...class4].sort(() => Math.random() - 0.5);\r\n\r\n    const folds = 10;\r\n    const results = [];\r\n\r\n    for (let i = 0; i < folds; i++) {\r\n      const testStart = Math.floor(i * shuffled.length / folds);\r\n      const testEnd = Math.floor((i + 1) * shuffled.length / folds);\r\n      const testData = shuffled.slice(testStart, testEnd);\r\n      const trainData = [...shuffled.slice(0, testStart), ...shuffled.slice(testEnd)];\r\n\r\n      // Normalize train and test data correctly\r\n      const normalized = normalizeData(trainData, testData, knnConfig.value.normalization, features);\r\n      const normTrain = normalized.train;\r\n      const normTest = normalized.test;\r\n\r\n      let correct = 0;\r\n      for (const testRow of normTest) {\r\n        const neighbors = findKNN(testRow, normTrain, features);\r\n        if (neighbors.length > 0) {\r\n          const predicted = aggregateDecisions(neighbors.map(n => n.decision));\r\n          if (predicted === testRow.decision) correct++;\r\n        }\r\n      }\r\n\r\n      const accuracy = (correct / normTest.length * 100).toFixed(2);\r\n      console.log(`Fold ${i + 1}: ${accuracy}% accuracy`);\r\n      results.push(accuracy);\r\n    }\r\n\r\n    const averageAccuracy = results.reduce((a, b) => a + parseFloat(b), 0) / results.length;\r\n    console.log('Average accuracy:', averageAccuracy + '%');\r\n    performanceMetrics.value = { accuracy: averageAccuracy };\r\n    return results;\r\n  }\r\n\r\n  function aggregateDecisions(decisions) {\r\n    switch (knnConfig.value.aggregation) {\r\n      case 'Mode':\r\n        return mode(decisions);\r\n      case 'Mean':\r\n        return Math.round(mean(decisions));\r\n      case 'Median':\r\n        return median(decisions);\r\n      case 'Weighted':\r\n        return mode(decisions);\r\n      default:\r\n        return mode(decisions);\r\n    }\r\n  }\r\n\r\n  function calculateConfidence(neighbors) {\r\n    const decisions = neighbors.map(n => n.decision);\r\n    const counts = {};\r\n    decisions.forEach(d => counts[d] = (counts[d] || 0) + 1);\r\n    const maxCount = Math.max(...Object.values(counts));\r\n    return maxCount / decisions.length;\r\n  }\r\n\r\n  function calculatePerformanceMetrics(results = knnResults.value) {\r\n    const cm = { truePositive: 0, falsePositive: 0, trueNegative: 0, falseNegative: 0 };\r\n\r\n    for (const result of results) {\r\n      if (result.actual === 2 && result.predicted === 2) cm.truePositive++;\r\n      if (result.actual === 4 && result.predicted === 2) cm.falsePositive++;\r\n      if (result.actual === 4 && result.predicted === 4) cm.trueNegative++;\r\n      if (result.actual === 2 && result.predicted === 4) cm.falseNegative++;\r\n    }\r\n\r\n    const total = results.length;\r\n    const accuracy = (cm.truePositive + cm.trueNegative) / total;\r\n    const precision = cm.truePositive / (cm.truePositive + cm.falsePositive + 1e-10);\r\n    const recall = cm.truePositive / (cm.truePositive + cm.falseNegative + 1e-10);\r\n    const f1 = 2 * (precision * recall) / (precision + recall + 1e-10);\r\n\r\n    performanceMetrics.value = {\r\n      accuracy: accuracy * 100,\r\n      precision: precision * 100,\r\n      recall: recall * 100,\r\n      f1: f1 * 100,\r\n      confusionMatrix: cm,\r\n      totalSamples: total\r\n    };\r\n  }\r\n\r\n  function updateAlgorithmAnalysis(operation, time, dataSize) {\r\n    if (!algorithmAnalysis.value) {\r\n      algorithmAnalysis.value = {\r\n        operations: {},\r\n        totalTime: 0,\r\n        memoryUsage: 0\r\n      };\r\n    }\r\n\r\n    if (!algorithmAnalysis.value.operations[operation]) {\r\n      algorithmAnalysis.value.operations[operation] = {\r\n        totalTime: 0,\r\n        calls: 0,\r\n        avgTime: 0,\r\n        maxTime: 0,\r\n        dataSize: 0\r\n      };\r\n    }\r\n\r\n    const op = algorithmAnalysis.value.operations[operation];\r\n    op.totalTime += time;\r\n    op.calls += 1;\r\n    op.avgTime = op.totalTime / op.calls;\r\n    op.maxTime = Math.max(op.maxTime, time);\r\n    op.dataSize = Math.max(op.dataSize, dataSize);\r\n\r\n    algorithmAnalysis.value.totalTime += time;\r\n    algorithmAnalysis.value.memoryUsage = estimateMemoryUsage();\r\n  }\r\n\r\n  function estimateMemoryUsage() {\r\n    const activeRows = store.getActiveRows.length;\r\n    const deletedRows = store.getDeletedRows.length;\r\n    const restoredRowsCount = restoredRows.value.length;\r\n    return (activeRows + deletedRows + restoredRowsCount) * 512;\r\n  }\r\n\r\n  function mean(values) {\r\n    return values.reduce((a, b) => a + b, 0) / values.length;\r\n  }\r\n\r\n  function median(values) {\r\n    const sorted = [...values].sort((a, b) => a - b);\r\n    const mid = Math.floor(sorted.length / 2);\r\n    return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\r\n  }\r\n\r\n  function mode(values) {\r\n    const freq = {};\r\n    let max = 0, mode = null;\r\n    for (const v of values) {\r\n      freq[v] = (freq[v] || 0) + 1;\r\n      if (freq[v] > max) {\r\n        max = freq[v];\r\n        mode = v;\r\n      }\r\n    }\r\n    return mode;\r\n  }\r\n\r\n  function restoreData(config = {}) {\r\n    const startTime = performance.now();\r\n    const restoredCount = { successful: 0, failed: 0 };\r\n\r\n    if (config.k) knnConfig.value.k = config.k;\r\n    if (config.distanceMetric) knnConfig.value.distanceMetric = config.distanceMetric;\r\n    if (config.normalization) knnConfig.value.normalization = config.normalization;\r\n\r\n    const features = Object.keys(store.getTableItems[0] || {})\r\n      .filter(k => !['id', 'decision', 'status', 'deletedAt', 'fullRowDeleted', 'deletedAttributes'].includes(k));\r\n\r\n    if (!store.getDeletedRows || store.getDeletedRows.length === 0) {\r\n      console.log(\"Brak usuniętych wierszy do odzyskania\");\r\n      return 0;\r\n    }\r\n\r\n    console.log(`Rozpoczynam odzyskiwanie ${store.getDeletedRows.length} usuniętych wierszy`);\r\n\r\n    store.getDeletedRows.forEach((deletedRow, index) => {\r\n      const cleanDecision = parseInt(String(deletedRow.decision).replace(/\\r/g, '').trim());\r\n\r\n      if (cleanDecision === 2 || cleanDecision === 4) {\r\n        const activeRows = store.getActiveRows.filter(row => {\r\n          const rowDecision = parseInt(String(row.decision).replace(/\\r/g, '').trim());\r\n          return rowDecision === cleanDecision;\r\n        });\r\n\r\n        if (activeRows.length > 0) {\r\n          const cleanDeletedRow = { ...deletedRow, decision: cleanDecision };\r\n          const neighbors = findKNN(cleanDeletedRow, activeRows, features);\r\n\r\n          if (neighbors.length > 0) {\r\n            const restoredRow = {\r\n              ...deletedRow,\r\n              decision: cleanDecision,\r\n              status: 'restored',\r\n              restoredAt: new Date().toISOString(),\r\n              fullRowDeleted: false,\r\n              deletedAttributes: []\r\n            };\r\n\r\n            if (deletedRow.deletedAttributes?.length > 0) {\r\n              deletedRow.deletedAttributes.forEach(attr => {\r\n                const values = neighbors.map(n => parseFloat(n.row[attr])).filter(v => !isNaN(v));\r\n                if (values.length > 0) {\r\n                  restoredRow[attr] = config.type === 'Median Value' ? median(values) : mean(values);\r\n                }\r\n              });\r\n            } else {\r\n              features.forEach(f => {\r\n                if (deletedRow[f] === 0 || isNaN(deletedRow[f]) || deletedRow[f] === null) {\r\n                  const values = neighbors.map(n => parseFloat(n.row[f])).filter(v => !isNaN(v));\r\n                  if (values.length > 0) {\r\n                    restoredRow[f] = config.type === 'Median Value' ? median(values) : mean(values);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            try {\r\n              if (deletedRow.fullRowDeleted) {\r\n                store.tableItems.push(restoredRow);\r\n              } else {\r\n                const rowIndex = store.tableItems.findIndex(item => item.id === deletedRow.id);\r\n                if (rowIndex !== -1) store.tableItems[rowIndex] = restoredRow;\r\n              }\r\n\r\n              store.deletedRows = store.deletedRows.filter(row => row.id !== deletedRow.id);\r\n              store.fullDeletions = store.fullDeletions.filter(row => row.id !== deletedRow.id);\r\n              restoredCount.successful++;\r\n            } catch (error) {\r\n              console.error(`Błąd przy przywracaniu wiersza ${deletedRow.id}:`, error);\r\n              restoredCount.failed++;\r\n            }\r\n          } else {\r\n            restoredCount.failed++;\r\n          }\r\n        } else {\r\n          restoredCount.failed++;\r\n        }\r\n      } else {\r\n        restoredCount.failed++;\r\n      }\r\n    });\r\n\r\n    updateAlgorithmAnalysis('data_restoration', performance.now() - startTime, store.getDeletedRows.length);\r\n    return restoredCount.successful;\r\n  }\r\n\r\n  function analyzeDistanceMetrics() {\r\n    const metrics = Object.keys(distanceMetrics);\r\n    const results = {};\r\n\r\n    for (const metric of metrics) {\r\n      const originalMetric = knnConfig.value.distanceMetric;\r\n      knnConfig.value.distanceMetric = metric;\r\n\r\n      crossValidate();\r\n\r\n      results[metric] = {\r\n        accuracy: performanceMetrics.value?.accuracy || 0,\r\n        f1: performanceMetrics.value?.f1 || 0,\r\n        precision: performanceMetrics.value?.precision || 0,\r\n        recall: performanceMetrics.value?.recall || 0\r\n      };\r\n\r\n      knnConfig.value.distanceMetric = originalMetric;\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  function generateConclusions() {\r\n    const analysis = algorithmAnalysis.value;\r\n    const performance = performanceMetrics.value;\r\n\r\n    return {\r\n      algorithmAnalysis: {\r\n        description: \"Analiza algorytmu KNN wykazuje jego złożoność czasową O(n*d*k), gdzie n to liczba próbek, d to liczba cech, a k to liczba sąsiadów.\",\r\n        timeComplexity: `Średni czas wykonania: ${analysis?.operations?.knn_search?.avgTime?.toFixed(2) || 0} ms`,\r\n        spaceComplexity: `Szacowane zużycie pamięci: ${analysis?.memoryUsage || 0} bajtów`,\r\n        scalability: analysis?.operations?.knn_search?.dataSize > 1000 ? \"Dobra skalowalność dla dużych zbiorów danych\" : \"Optymalna dla małych i średnich zbiorów danych\"\r\n      },\r\n      algorithmEfficiency: {\r\n        description: \"Efektywność algorytmu KNN w kontekście odzyskiwania danych zależy od wyboru miary odległości, normalizacji i wartości k.\",\r\n        bestDistanceMetric: knnConfig.value.distanceMetric,\r\n        bestNormalization: knnConfig.value.normalization,\r\n        recommendedK: knnConfig.value.k,\r\n        overallEfficiency: performance?.accuracy > 85 ? \"Wysoka\" : performance?.accuracy > 70 ? \"Średnia\" : \"Niska\"\r\n      },\r\n      recommendations: [\r\n        \"Użyj normalizacji Min-Max dla większości przypadków\",\r\n        \"Testuj różne wartości k (3, 5, 7) dla optymalnych rezultatów\",\r\n        \"Miara Euklidesowa sprawdza się dobrze dla danych numerycznych\",\r\n        \"Regularnie przeprowadzaj kroswalidację dla oceny jakości modelu\"\r\n      ]\r\n    };\r\n  }\r\n\r\n  return {\r\n    knnConfig,\r\n    knnResults,\r\n    performanceMetrics,\r\n    algorithmAnalysis,\r\n    crossValidate,\r\n    restoredRows,\r\n    restoreData,\r\n    analyzeDistanceMetrics,\r\n    generateConclusions,\r\n    getDeletedRows: () => store.getDeletedRows,\r\n    inspectData\r\n  };\r\n}","// Utilities\nimport { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VAlertTitle = createSimpleFunctional('v-alert-title');\n//# sourceMappingURL=VAlertTitle.mjs.map","import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAlert.css\";\n\n// Components\nimport { VAlertTitle } from \"./VAlertTitle.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const VAlert = genericComponent()({\n  name: 'VAlert',\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: val => {\n        return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n      }\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    icon: {\n      type: [Boolean, String, Function, Object],\n      default: null\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String,\n      validator: val => allowedTypes.includes(val)\n    },\n    ...makeComponentProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'flat'\n    })\n  },\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return props.icon ?? `$${props.type}`;\n    });\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant\n    }));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick(e) {\n        isActive.value = false;\n        emit('click:close', e);\n      }\n    }));\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasText = !!(props.text || slots.text);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-alert__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"density\": props.density,\n          \"icon\": icon.value,\n          \"size\": props.prominent ? 44 : 28\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !icon.value,\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title?.() ?? props.title]\n        }), hasText && (slots.text?.() ?? props.text), slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(\"div\", {\n          \"key\": \"close\",\n          \"class\": \"v-alert__close\"\n        }, [!slots.close ? _createVNode(VBtn, _mergeProps({\n          \"key\": \"close-btn\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\",\n          \"variant\": \"text\"\n        }, closeProps.value), null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [slots.close?.({\n            props: closeProps.value\n          })]\n        })])]\n      });\n    };\n  }\n});\n//# sourceMappingURL=VAlert.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardSubtitle = createSimpleFunctional('v-card-subtitle');\n//# sourceMappingURL=VCardSubtitle.mjs.map","import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCardSubtitle } from \"./VCardSubtitle.mjs\";\nimport { VCardTitle } from \"./VCardTitle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\"; // Utility\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VCardItem = genericComponent()({\n  name: 'VCardItem',\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: String,\n    title: String,\n    ...makeComponentProps(),\n    ...makeDensityProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon);\n      const hasAppend = !!(hasAppendMedia || slots.append);\n      const hasTitle = !!(props.title || slots.title);\n      const hasSubtitle = !!(props.subtitle || slots.subtitle);\n      return _createVNode(\"div\", {\n        \"class\": ['v-card-item', props.class],\n        \"style\": props.style\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-card-item__prepend\"\n      }, [!slots.prepend ? hasPrependMedia && _createVNode(VAvatar, {\n        \"key\": \"prepend-avatar\",\n        \"density\": props.density,\n        \"icon\": props.prependIcon,\n        \"image\": props.prependAvatar\n      }, null) : _createVNode(VDefaultsProvider, {\n        \"key\": \"prepend-defaults\",\n        \"disabled\": !hasPrependMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.prependIcon,\n            image: props.prependAvatar\n          }\n        }\n      }, slots.prepend)]), _createVNode(\"div\", {\n        \"class\": \"v-card-item__content\"\n      }, [hasTitle && _createVNode(VCardTitle, {\n        \"key\": \"title\"\n      }, {\n        default: () => [slots.title?.() ?? props.title]\n      }), hasSubtitle && _createVNode(VCardSubtitle, {\n        \"key\": \"subtitle\"\n      }, {\n        default: () => [slots.subtitle?.() ?? props.subtitle]\n      }), slots.default?.()]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-card-item__append\"\n      }, [!slots.append ? hasAppendMedia && _createVNode(VAvatar, {\n        \"key\": \"append-avatar\",\n        \"density\": props.density,\n        \"icon\": props.appendIcon,\n        \"image\": props.appendAvatar\n      }, null) : _createVNode(VDefaultsProvider, {\n        \"key\": \"append-defaults\",\n        \"disabled\": !hasAppendMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.appendIcon,\n            image: props.appendAvatar\n          }\n        }\n      }, slots.append)])]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCardItem.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n\n// Styles\nimport \"./VCard.css\";\n\n// Components\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCard = genericComponent()({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    subtitle: String,\n    text: String,\n    title: String,\n    ...makeBorderProps(),\n    ...makeComponentProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"href\": link.href.value,\n        \"onClick\": isClickable.value && link.navigate,\n        \"tabindex\": props.disabled ? -1 : undefined\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-card__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.(), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCard.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VCardActions = genericComponent()({\n  name: 'VCardActions',\n  props: makeComponentProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-card-actions', props.class],\n      \"style\": props.style\n    }, [slots.default?.()]));\n    return {};\n  }\n});\n//# sourceMappingURL=VCardActions.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardText = createSimpleFunctional('v-card-text');\n//# sourceMappingURL=VCardText.mjs.map","import { createSimpleFunctional } from \"../../util/index.mjs\";\nexport const VCardTitle = createSimpleFunctional('v-card-title');\n//# sourceMappingURL=VCardTitle.mjs.map"],"names":["useDataRestore","store","restoredRows","knnResults","performanceMetrics","algorithmAnalysis","knnConfig","k","distanceMetric","normalization","aggregation","distanceMetrics","Euclidean","x","y","features","sum","validFeatures","f","isNaN","Math","pow","sqrt","Infinity","Manhattan","abs","Cosine","dot","normX","normY","inspectData","data","prepareData","Object","keys","filter","includes","issues","map","invalidCount","row","length","Boolean","classCounts","class2","decision","class4","getActiveRows","item","cleaned","id","parseInt","String","replace","trim","status","forEach","numValue","parseFloat","normalizeData","trainData","testData","method","stats","values","v","undefined","min","max","mean","reduce","a","b","std","val","console","warn","normalize","normalized","value","range","train","test","findKNN","target","normTrain","normTarget","distances","index","distance","sort","slice","crossValidate","inspection","error","shuffled","random","folds","results","i","testStart","floor","testEnd","normTest","correct","testRow","neighbors","predicted","aggregateDecisions","n","accuracy","toFixed","log","push","averageAccuracy","decisions","mode","round","median","updateAlgorithmAnalysis","operation","time","dataSize","operations","totalTime","memoryUsage","calls","avgTime","maxTime","op","estimateMemoryUsage","activeRows","deletedRows","getDeletedRows","restoredRowsCount","sorted","mid","freq","restoreData","config","startTime","performance","now","restoredCount","successful","failed","getTableItems","deletedRow","cleanDecision","rowDecision","cleanDeletedRow","restoredRow","restoredAt","Date","toISOString","fullRowDeleted","deletedAttributes","attr","type","tableItems","rowIndex","findIndex","fullDeletions","analyzeDistanceMetrics","metrics","metric","originalMetric","f1","precision","recall","generateConclusions","analysis","description","timeComplexity","knn_search","spaceComplexity","scalability","algorithmEfficiency","bestDistanceMetric","bestNormalization","recommendedK","overallEfficiency","recommendations","VAlertTitle","createSimpleFunctional","allowedTypes","VAlert","name","props","border","validator","borderColor","closable","closeIcon","default","closeLabel","icon","Function","modelValue","prominent","title","text","variant","emits","e","setup","_ref","emit","slots","isActive","variantProps","color","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","textColorClasses","textColorStyles","t","closeProps","onClick","hasPrepend","prepend","hasTitle","hasText","hasClose","close","tag","class","style","VDefaultsProvider","VIcon","density","size","append","VBtn","VCardSubtitle","VCardItem","appendAvatar","appendIcon","prependAvatar","prependIcon","subtitle","useRender","hasPrependMedia","hasAppendMedia","hasAppend","hasSubtitle","VAvatar","image","V","VCardTitle","VCard","directives","Ripple","disabled","flat","hover","link","ripple","m","attrs","borderClasses","loaderClasses","isLink","isClickable","Tag","hasHeader","hasImage","hasCardItem","href","navigate","VImg","cover","src","loading","loader","VCardText","actions","VCardActions"],"sourceRoot":""}